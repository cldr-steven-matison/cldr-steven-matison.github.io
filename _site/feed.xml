<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://cldr-steven-matison.github.io//feed.xml" rel="self" type="application/atom+xml" /><link href="https://cldr-steven-matison.github.io//" rel="alternate" type="text/html" /><updated>2023-05-19T10:59:08-04:00</updated><id>https://cldr-steven-matison.github.io//feed.xml</id><title type="html">Cloudera Solutions Engineer</title><subtitle>Solutions Engineer @Cloudera</subtitle><author><name>Steven Matison</name></author><entry><title type="html">Converting NiFi XML to JSON with NiFi</title><link href="https://cldr-steven-matison.github.io//blog/dataflow-xml-to-json/" rel="alternate" type="text/html" title="Converting NiFi XML to JSON with NiFi" /><published>2023-05-19T00:00:00-04:00</published><updated>2023-05-19T00:00:00-04:00</updated><id>https://cldr-steven-matison.github.io//blog/dataflow-xml-to-json</id><content type="html" xml:base="https://cldr-steven-matison.github.io//blog/dataflow-xml-to-json/"><![CDATA[<p>I wanted to work with some old nifi xml templates in DataFlow which requires new nifi json flow definition files.  To get these templates converted I had to import them to an operational nifi, drag them onto the screen, and download the flow definition file I needed.  This seemed like a job for NiFi, not for me.   Since templates are going away,  I would suspect someday to see the upload template feature to go away in future nifi releases.  This potentially leaves a gap that I realized I could build an API to fill.</p>

<p>Enter NIFI Rest API <a href="https://nifi.apache.org/docs/nifi-docs/rest-api/index.html">docs</a></p>

<p>After a few working sessions I was able to come up with a nifi api using HandleHttpRequest/HandleHttpResponse with 4 internal Nifi Rest API calls using InvokeHttp.   You simply post an XML file to this api and the api will respond with HTTP 200 and the JSON flow definition file.</p>

<figure>
  
<img src="/assets/images/2023-05-19-dataflow-xml-to-json.png" alt="Foo" />

  <figcaption>
</figcaption>
</figure>

<p>You can find the Flow Definition File for my flow here:</p>

<p><a href="https://github.com/cldr-steven-matison/NiFi-Templates/blob/main/NiFi_Template_XML_to_Flow_Definition_JSON.json">NiFi_Template_XML_to_Flow_Definition_JSON</a></p>]]></content><author><name>Steven Matison</name></author><category term="blog" /><category term="nifi" /><summary type="html"><![CDATA[I wanted to work with some old nifi xml templates in DataFlow which requires new nifi json flow definition files. To get these templates converted I had to import them to an operational nifi, drag them onto the screen, and download the flow definition file I needed. This seemed like a job for NiFi, not for me. Since templates are going away, I would suspect someday to see the upload template feature to go away in future nifi releases. This potentially leaves a gap that I realized I could build an API to fill.]]></summary></entry><entry><title type="html">Newest NiFi @Cloudera</title><link href="https://cldr-steven-matison.github.io//blog/dataflow/" rel="alternate" type="text/html" title="Newest NiFi @Cloudera" /><published>2023-05-18T00:00:00-04:00</published><updated>2023-05-18T00:00:00-04:00</updated><id>https://cldr-steven-matison.github.io//blog/dataflow</id><content type="html" xml:base="https://cldr-steven-matison.github.io//blog/dataflow/"><![CDATA[<p>I wrote my first @Cloudera Community article on how to Operationalize NiFi with CDP Public Cloud’s DataFlow Data Service.   NiFi is something I have been excited about for a very long time.   A major focus of this blog and my social media content will be around all of the new cool things Cloudera is doing with NiFi.</p>

<p>You can read the full article over at the Cloudera Community:</p>

<p><a href="https://community.cloudera.com/t5/Community-Articles/Operationalize-NiFi-data-flows-with-Cloudera-DataFlow/ta-p/370577">Operationalize NiFi data flows with Cloudera DataFlow</a></p>]]></content><author><name>Steven Matison</name></author><category term="blog" /><category term="nifi" /><summary type="html"><![CDATA[I wrote my first @Cloudera Community article on how to Operationalize NiFi with CDP Public Cloud’s DataFlow Data Service. NiFi is something I have been excited about for a very long time. A major focus of this blog and my social media content will be around all of the new cool things Cloudera is doing with NiFi.]]></summary></entry><entry><title type="html">Welcome to My Cloudera Blog!</title><link href="https://cldr-steven-matison.github.io//blog/welcome/" rel="alternate" type="text/html" title="Welcome to My Cloudera Blog!" /><published>2023-05-17T00:00:00-04:00</published><updated>2023-05-17T00:00:00-04:00</updated><id>https://cldr-steven-matison.github.io//blog/welcome</id><content type="html" xml:base="https://cldr-steven-matison.github.io//blog/welcome/"><![CDATA[<p>This is my first post for my new GitHub Pages deployed website.   This was something I did in my previous role @Datastax and you can find that page <a href="https://ds-steven-matison.github.io">here</a>.  Please give me some time to get familar with the Minimal Mistakes theme and the changes in capability and functionality with this jekyll github.io page.</p>

<p>In this blog I am going share all of the things that I have found around me in the Cloudera Data Platform.</p>]]></content><author><name>Steven Matison</name></author><category term="blog" /><category term="update" /><summary type="html"><![CDATA[This is my first post for my new GitHub Pages deployed website. This was something I did in my previous role @Datastax and you can find that page here. Please give me some time to get familar with the Minimal Mistakes theme and the changes in capability and functionality with this jekyll github.io page.]]></summary></entry></feed>